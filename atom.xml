<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>CJR的博客</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://jrblog.github.io/"/>
  <updated>2019-06-22T16:44:02.408Z</updated>
  <id>http://jrblog.github.io/</id>
  
  <author>
    <name>CJR</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>无线WLAN隧道转发模式下数据的封装以及转发过程</title>
    <link href="http://jrblog.github.io/2019/06/22/%E6%97%A0%E7%BA%BFWLAN%E9%9A%A7%E9%81%93%E8%BD%AC%E5%8F%91%E6%A8%A1%E5%BC%8F%E4%B8%8B%E6%95%B0%E6%8D%AE%E7%9A%84%E5%B0%81%E8%A3%85%E4%BB%A5%E5%8F%8A%E8%BD%AC%E5%8F%91%E8%BF%87%E7%A8%8B/"/>
    <id>http://jrblog.github.io/2019/06/22/无线WLAN隧道转发模式下数据的封装以及转发过程/</id>
    <published>2019-06-22T14:10:58.515Z</published>
    <updated>2019-06-22T16:44:02.408Z</updated>
    
    <content type="html"><![CDATA[<h2 id="无线WLAN隧道转发模式下数据的封装以及转发过程"><a href="#无线WLAN隧道转发模式下数据的封装以及转发过程" class="headerlink" title="无线WLAN隧道转发模式下数据的封装以及转发过程"></a>无线WLAN隧道转发模式下数据的封装以及转发过程</h2><h3 id="实验用的拓扑："><a href="#实验用的拓扑：" class="headerlink" title="实验用的拓扑："></a>实验用的拓扑：</h3><p><img src="https://i.loli.net/2019/06/23/5d0e580d13d7299434.png" alt="5d0e580d13d7299434"></p><ul><li><p>AP1、AP2的业务vlan为101、102，管理vlan为100，AR路由器作为DHCP服务器为AP和终端分配IP地址、DNS等信息。</p></li><li><p>vlan100、101、102的网关都在核心交换机上。</p></li><li><p>核心交换机上做DHCP中继，把AP与终端的dhcp请求转到服务器上。</p></li><li><p>分别使用直接转发模式和隧道转发模式。</p></li></ul><h3 id="遇到的问题"><a href="#遇到的问题" class="headerlink" title="遇到的问题"></a>遇到的问题</h3><blockquote><p>在进行完正常的配置，AP上线、下发配置后，直接转发模式下的终端连接AP结果正常，但是在改为隧道转发模式后终端却怎么也获取不到IP信息，一直处于正在连接的状态。 当时感到困惑的是，通过wireshark抓包分析发现，这个请求包在并没有按照预想的通过中继来到dhcp服务器这里，进一步分析发现终端的dhcp discover封装了两层的vlan tag，内层为AP的业务vlan，外层为管理vlan，这时才恍然大悟，隧道模式下，数据会通过隧道封装先送到AC在进行处理。而业务vlan在核心交换机也就是网关那里就终结了，AC上并没有这些vlan信息，也不能为终端提供dhcp服务，导致了终端一直处于连接的状态。 这个时候解决问题的思路也就清晰了。</p></blockquote><ul><li><p>把AC配成dhcp服务器，直接为终端提供服务</p></li><li><p>在AC上添加业务vlan的信息，把dhcp请求中继到AR路由器上，依旧由AR提供dhcp服务。</p><p><strong>通过上述方法配置后，一切就正常了。下面附上华为官方关于两种转发模式的介绍</strong>。</p></li></ul><h3 id="业务数据报文直接转发的处理流程"><a href="#业务数据报文直接转发的处理流程" class="headerlink" title="业务数据报文直接转发的处理流程"></a>业务数据报文直接转发的处理流程</h3><p>如下图所示，直接转发模式下，业务数据报文不经过CAPWAP封装。</p><ul><li><p>上行（STA–&gt;Internet）：AP收到STA的802.11格式的上行业务数据，由AP直接转换为802.3报文并标记业务VLAN s后向目的地发送。</p></li><li><p>下行（Internet–&gt;STA）：下行业务数据以802.3报文到达AP（由上层网络设备标记业务VLAN s’），由AP转换为802.11格式发送给STA。</p></li></ul><p>中间网络设备需配置和透传业务VLAN s，这种组网模式下，AC一般旁挂在核心交换机或汇聚交换机上，不承担数据业务转发功能，只对AP进行管理。如果AC处于直连位置时，数据报文也需要通过AC进行转发，此时AC可视为承担汇聚交换机功能。</p><p><img src="https://support.huawei.com/hedex/pages/EDOC1100064375AZI0130Q/03/EDOC1100064375AZI0130Q/03/resources/dc/images/fig_dc_wlan_example_000005902.png" alt="1"></p><h3 id="业务数据报文CAPWAP隧道转发的处理流程"><a href="#业务数据报文CAPWAP隧道转发的处理流程" class="headerlink" title="业务数据报文CAPWAP隧道转发的处理流程"></a>业务数据报文CAPWAP隧道转发的处理流程</h3><p>如下图所示，AP与AC之间同时建立控制隧道和数据隧道，WLAN用户业务数据和管理报文分别封装在CAPWAP数据报文和CAPWAP控制报文中，在CAPWAP隧道中传递。</p><ul><li>上行（STA–&gt;Internet）：AP收到STA的802.11格式的上行业务数据，由AP直接转换为802.3报文并标记业务VLAN s，然后AP封装上行业务数据到CAPWAP报文中；由连接AP的交换机标记管理VLAN m；AC接收后解CAPWAP封装并终结VLAN m’。</li><li>下行（Internet–&gt;STA）：下行业务数据由AC封装到CAPWAP报文中，AC允许携带VLAN s的报文通过并对该报文标记VLAN m’，由AC标记业务VLAN s和管理VLAN m’；由连接AP的交换机终结VLAN m；由AP接收后解CAPWAP封装并终结VLAN s，并将802.3报文转换为802.11报文发送给STA。</li></ul><p>封装后的报文在CAPWAP报文外层使用管理VLAN m，AP与AC之间的网络设备只能透传管理VLAN m，而对封装在CAPWAP报文内的业务VLAN s不能放通。</p><p>AC处于直连和旁挂位置时，封装后的数据包都需要由AC处理和转发。</p><p><img src="https://support.huawei.com/hedex/pages/EDOC1100064375AZI0130Q/03/EDOC1100064375AZI0130Q/03/resources/dc/images/fig_dc_wlan_example_000005902.png" alt></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;无线WLAN隧道转发模式下数据的封装以及转发过程&quot;&gt;&lt;a href=&quot;#无线WLAN隧道转发模式下数据的封装以及转发过程&quot; class=&quot;headerlink&quot; title=&quot;无线WLAN隧道转发模式下数据的封装以及转发过程&quot;&gt;&lt;/a&gt;无线WLAN隧道转发模式下数
      
    
    </summary>
    
      <category term="华为" scheme="http://jrblog.github.io/categories/%E5%8D%8E%E4%B8%BA/"/>
    
    
      <category term="wlan" scheme="http://jrblog.github.io/tags/wlan/"/>
    
      <category term="华为" scheme="http://jrblog.github.io/tags/%E5%8D%8E%E4%B8%BA/"/>
    
  </entry>
  
  <entry>
    <title>socket实现FTP客户端</title>
    <link href="http://jrblog.github.io/2019/04/18/%E9%80%9A%E8%BF%87socket%E5%AE%9E%E7%8E%B0FTP%E5%AE%A2%E6%88%B7%E7%AB%AF%EF%BC%88MFC%E7%89%88%EF%BC%89/"/>
    <id>http://jrblog.github.io/2019/04/18/通过socket实现FTP客户端（MFC版）/</id>
    <published>2019-04-18T08:36:54.000Z</published>
    <updated>2019-06-23T06:29:51.141Z</updated>
    
    <content type="html"><![CDATA[<h1 id="通过socket实现FTP客户端（MFC版）"><a href="#通过socket实现FTP客户端（MFC版）" class="headerlink" title="通过socket实现FTP客户端（MFC版）"></a>通过socket实现FTP客户端（MFC版）</h1><p>使用socket我们可以自己编写一个FTP的客户端。开始之前先了解FTP的两种工作模式大致的过程。</p><h2 id="被动模式的流程"><a href="#被动模式的流程" class="headerlink" title="被动模式的流程"></a>被动模式的流程</h2><p>被动模式下，FTP客户端使用一个非知名的随机端口N（&gt;1024)去连接FTP服务器的21端口建立控制连接，然后通过控制通道发送PASV命令到服务器，服务器收到后会开启一个随机端口P（&gt;1024）并开始监听，同时告诉客户端连接我的端口P，客户端随后使用N+1端口连接服务器的端口P，建立数据连接。</p><h2 id="主动模式的流程"><a href="#主动模式的流程" class="headerlink" title="主动模式的流程"></a>主动模式的流程</h2><p>主动模式下，FTP客户端使用一个非知名的随机端口N（&gt;1024)去连接FTP服务器的21端口建立控制连接，然后通过控制通道发送PORT N+1命令到服务器，同时开始监听N+1端口，服务器收到后主动使用20端口与客户端的N+1端口连接，建立数据连接。</p><h2 id="客户端与服务器交互的常用命令"><a href="#客户端与服务器交互的常用命令" class="headerlink" title="客户端与服务器交互的常用命令"></a>客户端与服务器交互的常用命令</h2><p><strong>这里的命令是指底层数据包封装的命令，并不是指用户在控制台使用的与服务器交互的命令，比如dir、get、put等等。</strong></p><ul><li>客户端使用 USER、PASS 命令登录 FTP 服务器。</li><li>客户端使用 PASV 命令告知服务器使用被动模式，获取服务器数据连接的端口号，与服务器建立数据连接。</li><li>客户端使用PORT命令告知服务器使用主动模式，附带自己监听的数据端口，让服务器主动与其建立数据连接。</li><li>客户端使用SIZE命令获取文件的大小。</li><li>客户端使用 RETR、STOR 命令下载、上传文件。</li><li>客户端使用 QUIT 命令退出连接。</li></ul><h2 id="使用socket实现FTP客户端"><a href="#使用socket实现FTP客户端" class="headerlink" title="使用socket实现FTP客户端"></a>使用socket实现FTP客户端</h2><h3 id="创建socket"><a href="#创建socket" class="headerlink" title="创建socket"></a>创建socket</h3>  <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">WSADATA WSAData;</span><br><span class="line">  <span class="keyword">if</span> (WSAStartup(MAKEWORD(<span class="number">2</span>,<span class="number">2</span>),&amp;WSAData)!=<span class="number">0</span>)<span class="comment">//建立套接字绑定</span></span><br><span class="line">  &#123;</span><br><span class="line">      MessageBox(<span class="string">"初始化Winsock失败！"</span>);</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  SockCtrl=socket(AF_INET,SOCK_STREAM,<span class="number">0</span>);<span class="comment">//创建连接套接字</span></span><br><span class="line">  <span class="keyword">if</span> (SockCtrl==INVALID_SOCKET)</span><br><span class="line">  &#123;</span><br><span class="line">    MessageBox(<span class="string">"创建控制Socket失败！"</span>);</span><br><span class="line">    WSACleanup();</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h3 id="建立控制连接"><a href="#建立控制连接" class="headerlink" title="建立控制连接"></a>建立控制连接</h3>  <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">nConnect=connect(SockCtrl,(sockaddr*)&amp;serveraddr,<span class="keyword">sizeof</span>(serveraddr));<span class="comment">//建立FTP控制连接</span></span><br><span class="line">  <span class="keyword">if</span> (nConnect==SOCKET_ERROR)</span><br><span class="line">  &#123;</span><br><span class="line">      MessageBox(<span class="string">"控制连接建立失败！"</span>);</span><br><span class="line">      closesocket(SockCtrl);</span><br><span class="line">      WSACleanup();</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (!RecvRespond())</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">  &#123;<span class="comment">//判断连接应答码</span></span><br><span class="line">    <span class="keyword">if</span> (RespondCode==<span class="number">220</span>)</span><br><span class="line">    &#123;</span><br><span class="line">       m_tips+=<span class="string">"Server:  "</span>;</span><br><span class="line">       m_tips+=Respond;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        MessageBox(<span class="string">"控制连接响应错误！"</span>);</span><br><span class="line">        closesocket(SockCtrl);</span><br><span class="line">        WSACleanup();</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h3 id="定义SendCommand函数，用于客户端发送命令"><a href="#定义SendCommand函数，用于客户端发送命令" class="headerlink" title="定义SendCommand函数，用于客户端发送命令"></a>定义SendCommand函数，用于客户端发送命令</h3>  <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//发送命令</span></span><br><span class="line"><span class="keyword">bool</span> CFtpClientDlg::SendCommand(<span class="keyword">void</span>)</span><br><span class="line">&#123;</span><br><span class="line">   <span class="keyword">int</span> nSend;</span><br><span class="line"> nSend=send(SockCtrl,Command,<span class="built_in">strlen</span>(Command),<span class="number">0</span>);</span><br><span class="line"> <span class="keyword">if</span> (nSend==SOCKET_ERROR)</span><br><span class="line"> &#123;</span><br><span class="line">    MessageBox(<span class="string">"Socket发送失败！"</span>);</span><br><span class="line">    closesocket(SockCtrl);</span><br><span class="line">    WSACleanup();</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"> <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="定义RecvRespond函数，用于客户端接收响应码"><a href="#定义RecvRespond函数，用于客户端接收响应码" class="headerlink" title="定义RecvRespond函数，用于客户端接收响应码"></a>定义RecvRespond函数，用于客户端接收响应码</h3>  <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//接收响应码</span></span><br><span class="line"><span class="keyword">bool</span> CFtpClientDlg::RecvRespond(<span class="keyword">void</span>)</span><br><span class="line">&#123;</span><br><span class="line">      <span class="keyword">int</span> nRecv;</span><br><span class="line">  <span class="built_in">memset</span>(Respond,<span class="number">0</span>,MAX_SIZE);</span><br><span class="line">  nRecv=recv(SockCtrl,Respond,MAX_SIZE,<span class="number">0</span>);<span class="comment">//通过连接接收响应</span></span><br><span class="line">  <span class="keyword">if</span> (nRecv==SOCKET_ERROR)</span><br><span class="line">  &#123;</span><br><span class="line">     MessageBox(<span class="string">"Socket接收失败！"</span>);</span><br><span class="line">     closesocket(SockCtrl);</span><br><span class="line">     WSACleanup();</span><br><span class="line">     <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">//从响应中解析响应码</span></span><br><span class="line">  <span class="keyword">char</span>* ReplyCodes=<span class="keyword">new</span> <span class="keyword">char</span>[<span class="number">3</span>];</span><br><span class="line">  <span class="built_in">memset</span>(ReplyCodes,<span class="number">0</span>,<span class="number">3</span>);</span><br><span class="line">  <span class="built_in">memcpy</span>(ReplyCodes,Respond,<span class="number">3</span>);</span><br><span class="line">  RespondCode=atoi(ReplyCodes);</span><br><span class="line">  <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="验证用户名、口令"><a href="#验证用户名、口令" class="headerlink" title="验证用户名、口令"></a>验证用户名、口令</h3>  <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sprintf</span>(Command,<span class="string">"USER %s\r\n"</span>,m_user); <span class="comment">//Command为事先定义的缓冲区</span></span><br><span class="line">    <span class="keyword">if</span> (!SendCommand())</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">  m_tips+=<span class="string">"Client:  "</span>;<span class="comment">//m_tips为编辑框控件变量，用于显示交互过程</span></span><br><span class="line">  m_tips+=Command;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (!RecvRespond())</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">  &#123;<span class="comment">//判断USER应答码</span></span><br><span class="line">     <span class="keyword">if</span> (RespondCode==<span class="number">220</span> || RespondCode==<span class="number">331</span>)</span><br><span class="line">     &#123;</span><br><span class="line">        m_tips+=<span class="string">"Server: "</span>;</span><br><span class="line">        m_tips+=Respond;</span><br><span class="line">     &#125;</span><br><span class="line">     <span class="keyword">else</span></span><br><span class="line">     &#123;</span><br><span class="line">        MessageBox(<span class="string">"USER响应错误！"</span>);</span><br><span class="line">        closesocket(SockCtrl);</span><br><span class="line">        WSACleanup();</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">     &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (RespondCode==<span class="number">331</span>)<span class="comment">//User name okay,need password</span></span><br><span class="line">  &#123; <span class="comment">//合成PASS命令</span></span><br><span class="line">      <span class="built_in">memset</span>(Command,<span class="number">0</span>,MAX_SIZE);</span><br><span class="line">      <span class="built_in">sprintf</span>(Command,<span class="string">"PASS %s\r\n"</span>,m_pwd);</span><br><span class="line">      <span class="keyword">if</span> (!SendCommand())</span><br><span class="line">          <span class="keyword">return</span>;</span><br><span class="line">      m_tips+=<span class="string">"Client: PASS ******\r\n"</span>;</span><br><span class="line">      <span class="keyword">if</span> (!RecvRespond())</span><br><span class="line">          <span class="keyword">return</span>;</span><br><span class="line">      <span class="keyword">else</span></span><br><span class="line">      &#123;<span class="comment">//判断PASS响应码</span></span><br><span class="line">          <span class="keyword">if</span> (RespondCode==<span class="number">230</span>)</span><br><span class="line">          &#123;</span><br><span class="line">             m_tips+=<span class="string">"Server: "</span>;</span><br><span class="line">             m_tips+=Respond;</span><br><span class="line">             m_CONNECT.EnableWindow(FALSE);</span><br><span class="line">             m_QUIT.EnableWindow(TRUE);</span><br><span class="line">             m_LIST.EnableWindow(TRUE);</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">else</span></span><br><span class="line">          &#123;</span><br><span class="line">             MessageBox(<span class="string">"PASS响应错误！"</span>);</span><br><span class="line">             closesocket(SockCtrl);</span><br><span class="line">             WSACleanup();</span><br><span class="line">             <span class="keyword">return</span>;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><h3 id="被动模式"><a href="#被动模式" class="headerlink" title="被动模式"></a>被动模式</h3>  <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">bool</span> CFtpClientDlg::Pasv()</span><br><span class="line">&#123;</span><br><span class="line">  UpdateData(TRUE);</span><br><span class="line">   <span class="built_in">memset</span>(Command,<span class="number">0</span>,MAX_SIZE);</span><br><span class="line"> <span class="comment">//合成PASV命令</span></span><br><span class="line">   <span class="built_in">sprintf</span>(Command,<span class="string">"PASV \r\n"</span>);</span><br><span class="line"> <span class="keyword">if</span> (!SendCommand())</span><br><span class="line">     <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">  m_tips+=<span class="string">"Client: "</span>;</span><br><span class="line">  m_tips+=Command;</span><br><span class="line"> <span class="keyword">if</span> (!RecvRespond())</span><br><span class="line">     <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"> <span class="keyword">else</span></span><br><span class="line"> &#123;</span><br><span class="line">    <span class="comment">//判断PASV响应码</span></span><br><span class="line">     <span class="keyword">if</span> (RespondCode!=<span class="number">227</span>)</span><br><span class="line">     &#123;</span><br><span class="line">       MessageBox(<span class="string">"PASV响应错误！"</span>);</span><br><span class="line">       closesocket(SockCtrl);</span><br><span class="line">       WSACleanup();</span><br><span class="line">       <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">     &#125;</span><br><span class="line">      m_tips+=<span class="string">"Server: "</span>;</span><br><span class="line">      m_tips+=Respond;</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">char</span>* part[<span class="number">6</span>];</span><br><span class="line"> <span class="comment">//分离PASV应答信息</span></span><br><span class="line"><span class="keyword">if</span> (strtok(Respond,<span class="string">"("</span>))</span><br><span class="line">   &#123;</span><br><span class="line">     <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">5</span>;i++)</span><br><span class="line">     &#123;</span><br><span class="line">        part[i]=strtok(<span class="literal">NULL</span>,<span class="string">","</span>);</span><br><span class="line">        <span class="keyword">if</span> (!part[i])</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">     &#125;</span><br><span class="line">     part[<span class="number">5</span>]=strtok(<span class="literal">NULL</span>,<span class="string">")"</span>);      </span><br><span class="line">     <span class="keyword">if</span> (!part[<span class="number">5</span>])</span><br><span class="line">         <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">   &#125;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">      <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">unsigned</span> <span class="keyword">short</span> ServerPort;   <span class="comment">//获取服务器数据端口</span></span><br><span class="line">  ServerPort=<span class="keyword">unsigned</span> <span class="keyword">short</span>((atoi(part[<span class="number">4</span>])&lt;&lt;<span class="number">8</span>)+atoi(part[<span class="number">5</span>]));</span><br><span class="line">  SockDataTongxin=socket(AF_INET,SOCK_STREAM,<span class="number">0</span>);</span><br><span class="line">  <span class="keyword">if</span> (SockDataTongxin==INVALID_SOCKET)</span><br><span class="line">  &#123;</span><br><span class="line">    MessageBox(<span class="string">"创建数据Socket失败！"</span>);</span><br><span class="line">    closesocket(SockCtrl);</span><br><span class="line">    WSACleanup();</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  sockaddr_in serveraddr2;</span><br><span class="line">  serveraddr2.sin_family=AF_INET;</span><br><span class="line">  serveraddr2.sin_addr.S_un.S_addr=inet_addr(m_addr);</span><br><span class="line">  serveraddr2.sin_port=htons(ServerPort);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">int</span> nConnect=connect(SockDataTongxin,(sockaddr*)&amp;serveraddr2,<span class="keyword">sizeof</span>(serveraddr2));</span><br><span class="line">  <span class="keyword">if</span> (nConnect==SOCKET_ERROR)</span><br><span class="line">  &#123;</span><br><span class="line">    MessageBox(<span class="string">"数据连接失败！"</span>);</span><br><span class="line">    closesocket(SockCtrl);</span><br><span class="line">    closesocket(SockDataTongxin);</span><br><span class="line">    WSACleanup();</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  UpdateData(FALSE);</span><br><span class="line">  <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="主动模式"><a href="#主动模式" class="headerlink" title="主动模式"></a>主动模式</h3><p>  <strong>注意：客户端指明要使用主动模式时，只有在有上传、下载请求发生时服务器才会主动与客户端建立数据连接（被动模式可以是客户端事先与服务器建立数据连接后再有上传下载的请求），所以主动模式下客户端的端口监听事件应该在发生了数据传输的请求之后。</strong></p>  <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">bool</span> CFtpClientDlg::Port()</span><br><span class="line">&#123;</span><br><span class="line">  UpdateData(TRUE);</span><br><span class="line">  dataport+=<span class="number">1</span>;<span class="comment">//主动模式下，每建立一次数据连接，端口号都是在之前基础上+1</span></span><br><span class="line">  SockData=socket(AF_INET,SOCK_STREAM,<span class="number">0</span>);</span><br><span class="line">  <span class="keyword">if</span> (SockData==INVALID_SOCKET)</span><br><span class="line">  &#123;</span><br><span class="line">    MessageBox(<span class="string">"创建数据Socket失败！"</span>);</span><br><span class="line">    closesocket(SockCtrl);</span><br><span class="line">    WSACleanup();</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  sockaddr_in localaddr;</span><br><span class="line">  <span class="keyword">int</span> len=<span class="keyword">sizeof</span>(localaddr);</span><br><span class="line">  <span class="keyword">int</span> ret = getsockname(SockCtrl,(sockaddr*)&amp;localaddr,&amp;len);<span class="comment">//获取SockCtrl地址信息</span></span><br><span class="line">  <span class="keyword">if</span>(ret!=<span class="number">0</span>)</span><br><span class="line">  &#123;</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">"getsockname失败！"</span>);</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  localport=ntohs(localaddr.sin_port)+dataport;<span class="comment">//获取本地随机端口+1</span></span><br><span class="line">  localaddr.sin_family=AF_INET;</span><br><span class="line">  localaddr.sin_port=htons(localport);</span><br><span class="line">  <span class="comment">//localaddr.sin_addr.S_un.S_addr=htonl(INADDR_ANY);</span></span><br><span class="line">   ret =bind(SockData,(sockaddr*)&amp;localaddr,len);</span><br><span class="line">  <span class="keyword">if</span> (ret==SOCKET_ERROR)</span><br><span class="line">  &#123;</span><br><span class="line">    MessageBox(<span class="string">"bind失败！"</span>);</span><br><span class="line">    closesocket(SockCtrl);</span><br><span class="line">    closesocket(SockData);</span><br><span class="line">    WSACleanup();</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  ret =listen(SockData,<span class="number">64</span>);</span><br><span class="line">  <span class="keyword">if</span> (ret==SOCKET_ERROR)</span><br><span class="line">  &#123;</span><br><span class="line">    MessageBox(<span class="string">"listen失败！"</span>);</span><br><span class="line">    closesocket(SockCtrl);</span><br><span class="line">    closesocket(SockData);</span><br><span class="line">    WSACleanup();</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">  &#125;    </span><br><span class="line">  <span class="comment">//inet_ntoa(localaddr.sin_addr);</span></span><br><span class="line">   <span class="built_in">memset</span>(Command,<span class="number">0</span>,MAX_SIZE);</span><br><span class="line"> <span class="comment">//合成PORT命令</span></span><br><span class="line">   <span class="comment">//itoa(localaddr.sin_addr,buf,10);</span></span><br><span class="line">   <span class="keyword">char</span>* part[<span class="number">6</span>];</span><br><span class="line">   <span class="keyword">char</span> buf1[<span class="number">5</span>];</span><br><span class="line">   <span class="keyword">char</span> buf2[<span class="number">5</span>];</span><br><span class="line">   part[<span class="number">0</span>]=strtok(inet_ntoa(localaddr.sin_addr),<span class="string">"."</span>);</span><br><span class="line">   part[<span class="number">1</span>]=strtok(<span class="literal">NULL</span>,<span class="string">"."</span>);</span><br><span class="line">   part[<span class="number">2</span>]=strtok(<span class="literal">NULL</span>,<span class="string">"."</span>);</span><br><span class="line">   part[<span class="number">3</span>]=strtok(<span class="literal">NULL</span>,<span class="string">"."</span>);</span><br><span class="line">   part[<span class="number">4</span>]=itoa(localport/<span class="number">256</span>,buf1,<span class="number">10</span>);</span><br><span class="line">   part[<span class="number">5</span>]=itoa(localport%<span class="number">256</span>,buf2,<span class="number">10</span>);</span><br><span class="line">   <span class="built_in">sprintf</span>(Command,<span class="string">"PORT %s,%s,%s,%s,%s,%s\r\n"</span>,part[<span class="number">0</span>],part[<span class="number">1</span>],part[<span class="number">2</span>],part[<span class="number">3</span>],part[<span class="number">4</span>],part[<span class="number">5</span>]);</span><br><span class="line">     <span class="keyword">if</span> (!SendCommand())</span><br><span class="line">         <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">      m_tips+=<span class="string">"Client:  "</span>;;</span><br><span class="line">      m_tips+=Command;</span><br><span class="line"></span><br><span class="line">     <span class="keyword">if</span> (!RecvRespond())</span><br><span class="line">         <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">     <span class="keyword">else</span></span><br><span class="line">     &#123;</span><br><span class="line">        <span class="comment">//判断PORT响应码</span></span><br><span class="line">         <span class="keyword">if</span> (RespondCode==<span class="number">200</span>)</span><br><span class="line">         &#123;</span><br><span class="line">               m_tips+=<span class="string">"Server: "</span>;</span><br><span class="line">              m_tips+=Respond;</span><br><span class="line">              UpdateData(FALSE);</span><br><span class="line">              <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">         &#125;<span class="keyword">else</span></span><br><span class="line">         &#123;</span><br><span class="line">           MessageBox(<span class="string">"PORT响应错误！"</span>);</span><br><span class="line">           closesocket(SockCtrl);</span><br><span class="line">           WSACleanup();</span><br><span class="line">           <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">         &#125;</span><br><span class="line">      &#125;</span><br><span class="line">     UpdateData(FALSE);</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="被动模式下载文件"><a href="#被动模式下载文件" class="headerlink" title="被动模式下载文件"></a>被动模式下载文件</h3>  <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(!Pasv())</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">      UpdateData(TRUE);    </span><br><span class="line">      <span class="built_in">memset</span>(Command,<span class="number">0</span>,MAX_SIZE);</span><br><span class="line">      <span class="built_in">sprintf</span>(Command,<span class="string">"SIZE %s\r\n"</span>,m_filename);</span><br><span class="line">      <span class="keyword">if</span> (!SendCommand())</span><br><span class="line">          <span class="keyword">return</span>;</span><br><span class="line">      m_tips+=<span class="string">"Client: "</span>;</span><br><span class="line">      m_tips+=Command;</span><br><span class="line">      <span class="keyword">if</span> (!RecvRespond())<span class="comment">//接收响应</span></span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">      <span class="keyword">else</span></span><br><span class="line">      &#123;</span><br><span class="line">          m_tips+=<span class="string">"Server: "</span>;</span><br><span class="line">          m_tips+=Respond;</span><br><span class="line">          strtok(Respond,<span class="string">" "</span>);</span><br><span class="line">          <span class="keyword">char</span> *str;</span><br><span class="line">          str=strtok(<span class="literal">NULL</span>,<span class="string">"\r\n"</span>);</span><br><span class="line">          size=atoi(str);<span class="comment">//获取文件长度</span></span><br><span class="line">          <span class="keyword">if</span> (RespondCode!=<span class="number">213</span>)</span><br><span class="line">          &#123;</span><br><span class="line">              UpdateData(FALSE);</span><br><span class="line">              m_TIPSCTRL.LineScroll(m_TIPSCTRL.GetLineCount());<span class="comment">//滚动条置底</span></span><br><span class="line">              closesocket(SockDataTongxin);</span><br><span class="line">              <span class="keyword">return</span>;</span><br><span class="line">          &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="built_in">memset</span>(Command,<span class="number">0</span>,MAX_SIZE);</span><br><span class="line">      <span class="built_in">sprintf</span>(Command,<span class="string">"RETR %s\r\n"</span>,m_filename);</span><br><span class="line">      <span class="keyword">if</span> (!SendCommand())</span><br><span class="line">          <span class="keyword">return</span>;</span><br><span class="line">      m_tips+=<span class="string">"Client: "</span>;</span><br><span class="line">      m_tips+=Command;</span><br><span class="line">      <span class="keyword">if</span> (!RecvRespond())<span class="comment">//接收响应</span></span><br><span class="line">          <span class="keyword">return</span>;</span><br><span class="line">      <span class="keyword">else</span></span><br><span class="line">      &#123;</span><br><span class="line">          m_tips+=<span class="string">"Server: "</span>;</span><br><span class="line">          m_tips+=Respond;</span><br><span class="line">          <span class="keyword">if</span> (RespondCode!=<span class="number">150</span>)</span><br><span class="line">          &#123;</span><br><span class="line">              UpdateData(FALSE);    </span><br><span class="line">              m_TIPSCTRL.LineScroll(m_TIPSCTRL.GetLineCount());<span class="comment">//滚动条置底</span></span><br><span class="line">             closesocket(SockDataTongxin);</span><br><span class="line">              <span class="keyword">return</span>;</span><br><span class="line">          &#125;</span><br><span class="line">      &#125;</span><br></pre></td></tr></table></figure><h3 id="主动模式下载文件"><a href="#主动模式下载文件" class="headerlink" title="主动模式下载文件"></a>主动模式下载文件</h3>  <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line">dataport+=<span class="number">1</span>;<span class="comment">//主动模式下，每建立一次数据连接，端口号都是在之前基础上+1</span></span><br><span class="line"><span class="keyword">if</span>(!Port())</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">UpdateData(TRUE);    </span><br><span class="line"><span class="built_in">memset</span>(Command,<span class="number">0</span>,MAX_SIZE);</span><br><span class="line"><span class="built_in">sprintf</span>(Command,<span class="string">"SIZE %s\r\n"</span>,m_filename);</span><br><span class="line"><span class="keyword">if</span> (!SendCommand())</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">m_tips+=<span class="string">"Client: "</span>;</span><br><span class="line">m_tips+=Command;</span><br><span class="line"><span class="keyword">if</span> (!RecvRespond())<span class="comment">//接收响应</span></span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">     m_tips+=<span class="string">"Server: "</span>;</span><br><span class="line">     m_tips+=Respond;</span><br><span class="line">  </span><br><span class="line">    <span class="keyword">if</span> (RespondCode!=<span class="number">213</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        UpdateData(FALSE);    </span><br><span class="line">        m_TIPSCTRL.LineScroll(m_TIPSCTRL.GetLineCount());<span class="comment">//滚动条置底</span></span><br><span class="line">      closesocket(SockDataTongxin);</span><br><span class="line">       <span class="keyword">return</span>;      </span><br><span class="line">    &#125;</span><br><span class="line">  </span><br><span class="line">&#125;</span><br><span class="line">strtok(Respond,<span class="string">" "</span>);</span><br><span class="line"><span class="keyword">char</span> *str;</span><br><span class="line">str=strtok(<span class="literal">NULL</span>,<span class="string">"\r\n"</span>);</span><br><span class="line">size=atoi(str);<span class="comment">//获取文件长度</span></span><br><span class="line"><span class="built_in">memset</span>(Command,<span class="number">0</span>,MAX_SIZE);</span><br><span class="line"><span class="built_in">sprintf</span>(Command,<span class="string">"RETR %s\r\n"</span>,m_filename);</span><br><span class="line"><span class="keyword">if</span> (!SendCommand())</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">m_tips+=<span class="string">"Client: "</span>;</span><br><span class="line">m_tips+=Command;        </span><br><span class="line"><span class="comment">//accept()在数据传输请求之后</span></span><br><span class="line">SockDataTongxin = accept(SockData,<span class="literal">NULL</span>,<span class="literal">NULL</span>);</span><br><span class="line"><span class="keyword">if</span> (SockDataTongxin==INVALID_SOCKET)</span><br><span class="line">&#123;</span><br><span class="line">  MessageBox(<span class="string">"accept失败！"</span>);</span><br><span class="line">  <span class="comment">//closesocket(SockCtrl);</span></span><br><span class="line">  closesocket(SockData);</span><br><span class="line">  <span class="keyword">return</span> ;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (!RecvRespond())<span class="comment">//接收响应</span></span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">    m_tips+=<span class="string">"Server: "</span>;</span><br><span class="line">    m_tips+=Respond;        </span><br><span class="line">    <span class="keyword">if</span> (RespondCode!=<span class="number">150</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        UpdateData(FALSE);</span><br><span class="line">        m_TIPSCTRL.LineScroll(m_TIPSCTRL.GetLineCount());<span class="comment">//滚动条置底</span></span><br><span class="line">        closesocket(SockDataTongxin);</span><br><span class="line">       <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="被动模式上传文件"><a href="#被动模式上传文件" class="headerlink" title="被动模式上传文件"></a>被动模式上传文件</h3>  <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(!Pasv())</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">      <span class="built_in">memset</span>(Command,<span class="number">0</span>,MAX_SIZE);</span><br><span class="line">      <span class="built_in">sprintf</span>(Command,<span class="string">"STOR %s\r\n"</span>,uploadfile);<span class="comment">//uploadfile为事先定义的文件路径名变量</span></span><br><span class="line">      <span class="keyword">if</span> (!SendCommand())</span><br><span class="line">          <span class="keyword">return</span>;</span><br><span class="line">      m_tips+=<span class="string">"Client: "</span>;</span><br><span class="line">      m_tips+=Command;</span><br><span class="line">      <span class="keyword">if</span> (!RecvRespond())<span class="comment">//接收响应</span></span><br><span class="line">          <span class="keyword">return</span>;</span><br><span class="line">      <span class="keyword">else</span></span><br><span class="line">      &#123; </span><br><span class="line">          m_tips+=<span class="string">"Server: "</span>;</span><br><span class="line">          m_tips+=Respond;</span><br><span class="line">          <span class="keyword">if</span> (RespondCode!=<span class="number">150</span>)</span><br><span class="line">          &#123;</span><br><span class="line">           <span class="comment">//MessageBox("STOR响应错误！");</span></span><br><span class="line">              UpdateData(FALSE);</span><br><span class="line">              m_TIPSCTRL.LineScroll(m_TIPSCTRL.GetLineCount());<span class="comment">//滚动条置底    </span></span><br><span class="line">             closesocket(SockDataTongxin);</span><br><span class="line">             <span class="keyword">return</span>;</span><br><span class="line">          &#125;</span><br><span class="line">      &#125;    </span><br><span class="line">      UpdateData(FALSE);</span><br><span class="line">      FILE *fp=fopen(m_path,<span class="string">"rb"</span>);</span><br><span class="line">      fseek(fp,<span class="number">0</span>,SEEK_SET);</span><br><span class="line">      fseek(fp,<span class="number">0</span>,SEEK_END);</span><br><span class="line">       <span class="keyword">long</span> length = ftell(fp);<span class="comment">//获取文件长度</span></span><br><span class="line">      fseek(fp,<span class="number">0</span>,SEEK_SET);<span class="comment">//文件指针指回文件头</span></span><br><span class="line">      <span class="comment">//char *Buf=new char(length);;</span></span><br><span class="line">      <span class="keyword">char</span> *Buf=<span class="keyword">new</span> <span class="keyword">char</span>[length];</span><br><span class="line">      fread(Buf,length,<span class="number">1</span>,fp);</span><br><span class="line">      fclose(fp);</span><br><span class="line">      <span class="keyword">int</span> ret=send(SockDataTongxin,Buf,length,<span class="number">0</span>);</span><br><span class="line">      <span class="keyword">if</span>(ret==SOCKET_ERROR)</span><br><span class="line">      &#123;</span><br><span class="line">          MessageBox(<span class="string">"上传文件失败！"</span>);</span><br><span class="line">      &#125;</span><br><span class="line">      closesocket(SockDataTongxin);    </span><br><span class="line">      <span class="keyword">if</span> (!RecvRespond())<span class="comment">//接收响应</span></span><br><span class="line">          <span class="keyword">return</span>;</span><br><span class="line">      <span class="keyword">else</span></span><br><span class="line">      &#123; </span><br><span class="line">          m_tips+=<span class="string">"Server: "</span>;</span><br><span class="line">          m_tips+=Respond;</span><br><span class="line">          <span class="keyword">if</span> (RespondCode!=<span class="number">226</span>)</span><br><span class="line">          &#123;</span><br><span class="line">              UpdateData(FALSE);</span><br><span class="line">              m_TIPSCTRL.LineScroll(m_TIPSCTRL.GetLineCount());<span class="comment">//滚动条置底    </span></span><br><span class="line">             closesocket(SockDataTongxin);</span><br><span class="line">             <span class="keyword">return</span>;</span><br><span class="line">          &#125;</span><br><span class="line">      &#125;</span><br></pre></td></tr></table></figure><h3 id="主动模式上传文件"><a href="#主动模式上传文件" class="headerlink" title="主动模式上传文件"></a>主动模式上传文件</h3>  <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line">dataport+=<span class="number">1</span>;<span class="comment">//主动模式下，每建立一次数据连接，端口号都是在之前基础上+1</span></span><br><span class="line"><span class="keyword">if</span>(!Port())</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line"><span class="built_in">memset</span>(Command,<span class="number">0</span>,MAX_SIZE);</span><br><span class="line"><span class="built_in">sprintf</span>(Command,<span class="string">"STOR %s\r\n"</span>,uploadfile);</span><br><span class="line"><span class="keyword">if</span> (!SendCommand())</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">m_tips+=<span class="string">"Client: "</span>;</span><br><span class="line">m_tips+=Command;</span><br><span class="line"><span class="comment">//accept()在数据传输请求之后</span></span><br><span class="line">SockDataTongxin = accept(SockData,<span class="literal">NULL</span>,<span class="literal">NULL</span>);</span><br><span class="line"><span class="keyword">if</span> (SockDataTongxin==INVALID_SOCKET)</span><br><span class="line">&#123;</span><br><span class="line">  MessageBox(<span class="string">"accept失败！"</span>);</span><br><span class="line">  closesocket(SockData);</span><br><span class="line">  <span class="keyword">return</span> ;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (!RecvRespond())<span class="comment">//接收响应</span></span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123; </span><br><span class="line">    m_tips+=<span class="string">"Server: "</span>;</span><br><span class="line">    m_tips+=Respond;</span><br><span class="line">    <span class="keyword">if</span> (RespondCode!=<span class="number">150</span>)</span><br><span class="line">    &#123;</span><br><span class="line">     <span class="comment">//MessageBox("STOR响应错误！");</span></span><br><span class="line">        UpdateData(FALSE);</span><br><span class="line">        m_TIPSCTRL.LineScroll(m_TIPSCTRL.GetLineCount());<span class="comment">//滚动条置底    </span></span><br><span class="line">       closesocket(SockDataTongxin);</span><br><span class="line">       <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"> &#125;    </span><br><span class="line">FILE *fp1=fopen(m_path,<span class="string">"rb"</span>);</span><br><span class="line">fseek(fp1,<span class="number">0</span>,SEEK_SET);</span><br><span class="line">fseek(fp1,<span class="number">0</span>,SEEK_END);</span><br><span class="line"> <span class="keyword">long</span> length = ftell(fp1);<span class="comment">//获取文件长度</span></span><br><span class="line">fseek(fp1,<span class="number">0</span>,SEEK_SET);<span class="comment">//文件指针指回文件头</span></span><br><span class="line"><span class="keyword">char</span> *Buf=<span class="keyword">new</span> <span class="keyword">char</span>[length];</span><br><span class="line">fread(Buf,length,<span class="number">1</span>,fp1);</span><br><span class="line">fclose(fp1);</span><br><span class="line"><span class="keyword">int</span> ret=send(SockDataTongxin,Buf,length,<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(ret==SOCKET_ERROR)</span><br><span class="line">&#123;</span><br><span class="line">    MessageBox(<span class="string">"上传文件失败！"</span>);</span><br><span class="line">&#125;</span><br><span class="line">closesocket(SockDataTongxin);</span><br><span class="line"><span class="keyword">if</span> (!RecvRespond())<span class="comment">//接收响应</span></span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123; </span><br><span class="line">    m_tips+=<span class="string">"Server: "</span>;</span><br><span class="line">    m_tips+=Respond;</span><br><span class="line">    <span class="keyword">if</span> (RespondCode!=<span class="number">150</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        UpdateData(FALSE);</span><br><span class="line">        m_TIPSCTRL.LineScroll(m_TIPSCTRL.GetLineCount());<span class="comment">//滚动条置底    </span></span><br><span class="line">       closesocket(SockDataTongxin);</span><br><span class="line">       <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><h3 id="与服务器断开连接"><a href="#与服务器断开连接" class="headerlink" title="与服务器断开连接"></a>与服务器断开连接</h3><p>  <strong>这里断开的是控制连接，数据连接则是每一次数据传输时建立，传输结束时就断开的。</strong></p>  <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">svoid CFtpClientDlg::OnBnClickedQuit()</span><br><span class="line">&#123;</span><br><span class="line">  <span class="comment">// <span class="doctag">TODO:</span> 在此添加控件通知处理程序代码</span></span><br><span class="line">  <span class="built_in">memset</span>(Command,<span class="number">0</span>,MAX_SIZE);</span><br><span class="line">  <span class="comment">//合成QUIT命令</span></span><br><span class="line">  <span class="built_in">sprintf</span>(Command,<span class="string">"QUIT\r\n"</span>);</span><br><span class="line">  <span class="keyword">if</span> (!SendCommand())</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">  m_tips+=<span class="string">"Client: "</span>;</span><br><span class="line">  m_tips+=Command;</span><br><span class="line">  <span class="keyword">if</span> (!RecvRespond())</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">if</span> (RespondCode==<span class="number">221</span>)</span><br><span class="line">    &#123;</span><br><span class="line">       m_tips+=<span class="string">"Server: "</span>;</span><br><span class="line">       m_tips+=Respond;</span><br><span class="line">       m_direc=<span class="string">""</span>;</span><br><span class="line">       m_CONNECT.EnableWindow(TRUE);</span><br><span class="line">      m_QUIT.EnableWindow(FALSE);</span><br><span class="line">      m_LIST.EnableWindow(FALSE);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">      m_tips+=<span class="string">"Server: "</span>;</span><br><span class="line">       m_tips+=Respond;</span><br><span class="line">       m_direc=<span class="string">""</span>;MessageBox(<span class="string">"QUIT响应错误！"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  UpdateData(FALSE);</span><br><span class="line">  closesocket(SockCtrl);</span><br><span class="line">  WSACleanup();</span><br><span class="line">  m_TIPSCTRL.LineScroll(m_TIPSCTRL.GetLineCount());<span class="comment">//滚动条置底</span></span><br><span class="line">  GetDlgItem(IDC_PASV)-&gt;EnableWindow(TRUE);</span><br><span class="line">  GetDlgItem(IDC_PORT)-&gt;EnableWindow(TRUE);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="附上最后的效果图"><a href="#附上最后的效果图" class="headerlink" title="附上最后的效果图"></a>附上最后的效果图</h3><p><img src="./images/360%E6%88%AA%E5%9B%BE.jpg" alt="enter description here"></p><p><img src="/home/cjr/Downloads/blog/360%E6%88%AA%E5%9B%BE.jpg" alt="360截图"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;通过socket实现FTP客户端（MFC版）&quot;&gt;&lt;a href=&quot;#通过socket实现FTP客户端（MFC版）&quot; class=&quot;headerlink&quot; title=&quot;通过socket实现FTP客户端（MFC版）&quot;&gt;&lt;/a&gt;通过socket实现FTP客户端（MFC
      
    
    </summary>
    
      <category term="编程" scheme="http://jrblog.github.io/categories/%E7%BC%96%E7%A8%8B/"/>
    
      <category term="网络" scheme="http://jrblog.github.io/categories/%E7%BC%96%E7%A8%8B/%E7%BD%91%E7%BB%9C/"/>
    
    
      <category term="socket" scheme="http://jrblog.github.io/tags/socket/"/>
    
      <category term="c++" scheme="http://jrblog.github.io/tags/c/"/>
    
      <category term="MFC" scheme="http://jrblog.github.io/tags/MFC/"/>
    
      <category term="编程" scheme="http://jrblog.github.io/tags/%E7%BC%96%E7%A8%8B/"/>
    
      <category term="FTP" scheme="http://jrblog.github.io/tags/FTP/"/>
    
      <category term="网络协议" scheme="http://jrblog.github.io/tags/%E7%BD%91%E7%BB%9C%E5%8D%8F%E8%AE%AE/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://jrblog.github.io/2018/06/12/hello-world/"/>
    <id>http://jrblog.github.io/2018/06/12/hello-world/</id>
    <published>2018-06-12T09:13:44.000Z</published>
    <updated>2019-06-23T06:31:01.975Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
</feed>
